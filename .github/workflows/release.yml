on:
  push:
    branches: [ master ]

name: build

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: DoozyX/clang-format-lint-action@v0.10
        with:
          style: file
          source: 'source plugins'
          clangFormatVersion: 11
          inplace: True
      - uses: EndBug/add-and-commit@v7
        with:
          author_name: Clang Robot
          author_email: clang-robot@the-starport.net
          message: 'clang-format changes'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      
      - run: vcpkg integrate install

      - uses: ilammy/msvc-dev-cmd@v1.5.0
        with:
          arch: x86

      - name: Compile FLHook
        run: msbuild.exe "${env:GITHUB_WORKSPACE}\project\FLHook.sln" /t:Build /p:Configuration=Release /p:Platform=Win32

      - name: Compile PlayerControlSetup
        run: msbuild.exe "${env:GITHUB_WORKSPACE}\plugins\playercntl_plugin\setup_src\PlayerCntlSetup.sln" /t:Build /p:Configuration=Release /p:Platform="Any CPU"
      
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d-%H-%M')"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.date.outputs.date }}
          release_name: ${{ steps.date.outputs.date }}
          body: |
            This is a release of FLHook automatically generated after a commit to the main branch. "Release.zip" contains a compiled copy of FLHook and it's plugins.
          draft: false
          prerelease: false
      
      - name: Remove .pdb files
        run: |
          del /S *.pdb
        shell: cmd

      - name: Remove template .dll
        run: |
          del /S $safeprojectname$.dll
        shell: cmd

      - name: Zip dlls
        run: |
          powershell Compress-Archive -Path .\dist\Release -DestinationPath .\Release.zip

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./Release.zip
          asset_name: Release.zip
          asset_content_type: application/zip

      